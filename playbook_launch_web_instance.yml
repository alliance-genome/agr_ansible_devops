---
- name: Setup Docker Server
  hosts: local
  connection: local
  gather_facts: False

  vars_files:
    - "environments/{{ env }}/main.yml" # ENV must always be loaded first
    - "environments/shared_secrets.yml"

  tasks:
    - name: Launch instances
      ec2:
        key_name: AGR-ssl2
        keypair: AGR-ssl2
        group: ["default", "SSH", "ES Transport", "HTTP/HTTPS"]
        instance_type: "{{ WEBSERVER_INSTANCE_TYPE }}"
        image: "{{ WEBSERVER_AMI_IMAGE }}"
        region: us-east-1
        vpc_subnet_id: subnet-3ebf4477
        assign_public_ip: yes
        instance_profile_name: S3DataAccess
        aws_access_key: "{{ AWS_ACCESS_KEY }}"
        aws_secret_key: "{{ AWS_SECRET_KEY }}"
        volumes:
          - device_name: /dev/xvda
            volume_type: standard
            volume_size: 750
            delete_on_termination: yes
        wait: yes
        user_data: "" # Otherwise get weird error on start up
        instance_tags:
          Name: "Ansible Generated - {{ PLAYBOOK_NAME }}"
      register: ec2

    - name: Add all instance public IPs to host group
      add_host:
        hostname: '{{ item.public_ip }}'
        groupname: launched
      with_items: "{{ ec2.instances }}"
      register: launched

    - name: Retrieve all volumes for a queried instance
      ec2_vol:
        instance: '{{ item }}'
        region: us-east-1
        state: list
        aws_access_key: "{{ AWS_ACCESS_KEY }}"
        aws_secret_key: "{{ AWS_SECRET_KEY }}"
      with_items: "{{ ec2.instance_ids }}"
      register: ec2_volumes

    - name: Ensure all volumes are tagged
      ec2_tag:
        region: us-east-1
        resource: '{{ item.1.id }}'
        aws_access_key: "{{ AWS_ACCESS_KEY }}"
        aws_secret_key: "{{ AWS_SECRET_KEY }}"
        tags:
          Name: "Ansible Generated Volume - {{ PLAYBOOK_NAME }}"
      with_subelements:
        - "{{ ec2_volumes.results }}"
        - volumes

    - include_tasks: tasks/check_ssh.yml
