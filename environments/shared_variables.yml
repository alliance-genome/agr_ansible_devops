---

# Ansible Specific Vars
ansible_ssh_user: core
ansible_python_interpreter: /home/core/pypy/bin/pypy

ALLIANCE_RELEASE: "{{ lookup('env','ALLIANCE_RELEASE') }}"
DOCKER_PULL_TAG: "{{ lookup('env','DOCKER_PULL_TAG') | default(env,True) }}"
DOCKER_BUILD_TAG: "{{ lookup('env','DOCKER_BUILD_TAG') | default(env,True) }}"
REGISTRY: 100225593120.dkr.ecr.us-east-1.amazonaws.com

# Env Image names
NEO_ENV_NAME: agr_neo4j_env
ES_ENV_NAME: agr_elasticsearch_env
GOCD_ENV_NAME: agr_gocd_env
KIBANA_ENV_NAME: agr_kibana_env
INFINISPAN_ENV_NAME: agr_infinispan_env
INTERMINE_BUILDER_ENV_NAME: agr_intermine_builder_env
INTERMINE_POSTGRES_ENV_NAME: "intermine/postgres"
INTERMINE_SOLR_ENV_NAME: "intermine/solr"
INTERMINE_TOMCAT_ENV_NAME: "intermine/tomcat"

# Data Image names
NEO_DATA_IMAGE_NAME: agr_neo4j_data_image
INFINISPAN_DATA_IMAGE_NAME: agr_infinispan_data_image

# Runable image names
QC_IMAGE_NAME: agr_qc_run
LOADER_IMAGE_NAME: agr_loader_run
PREPROCESS_IMAGE_NAME: agr_preprocess_run
JAVA_SOFTWARE_IMAGE_NAME: agr_java_software
FILEGENER_IMAGE_NAME: agr_file_generator_run
JBROWSE_IMAGE_NAME: agr_jbrowse_run
APOLLO_IMAGE_NAME: agr_apollo_run

INTERMINE_POSTGRES_SERVER_IMAGE_NAME: agr_intermine_postgres_server
INTERMINE_SOLR_SERVER_IMAGE_NAME: agr_intermine_solr_server
INTERMINE_TOMCAT_SERVER_IMAGE_NAME: agr_intermine_tomcat_server

# Server Image names
UI_IMAGE_NAME: agr_ui_server

# Server Names
UI_SERVER_NAME: "agr.{{ env }}.ui.server"
JBROWSE_SERVER_NAME: "agr.{{ env }}.jbrowse.server"
APOLLO_SERVER_NAME: "agr.{{ env }}.apollo.server"
API_SERVER_NAME: "agr.{{ env }}.api.server"
NEO_SERVER_NAME: "agr.{{ env }}.neo4j.server"
INFINISPAN_SERVER_NAME: "agr.{{ env }}.infinispan.server"
LOGSTASH_SERVER_ADDRESS: "udp://logs.alliancegenome.internal:12201"
PROMETHEUS_SERVER_NAME: "agr.{{ env }}.prometheus.server"
ALERTMANAGER_SERVER_NAME: "agr.{{ env }}.alertmanager.server"
CADVISOR_SERVER_NAME: "agr.{{ env }}.cadvisor.server"
NODEEXPORTER_SERVER_NAME: "agr.{{ env }}.nodeexporter.server"
GRAFANA_SERVER_NAME: "agr.{{ env }}.grafana.server"
PORTAINER_SERVER_NAME: "agr.{{ env }}.portainer.server"
#LOGSTASH_SERVER_ADDRESS: "udp://agr.{{ env }}.log.server:12201"
INTERMINE_POSTGRES_SERVER_NAME: "agr.{{ env }}.intermine.postgres.server"
INTERMINE_SOLR_SERVER_NAME: "agr.{{ env }}.intermine.solr.server"
INTERMINE_TOMCAT_SERVER_NAME: "agr.{{ env }}.intermine.tomcat.server"

#Servers
ES_SERVER_NAME: "agr.{{ env }}.elasticsearch.server"
GOCD_AGENT_NAME: "agr.{{ env }}.gocd.agent"
LOG_SERVER_NAME: "agr.{{ env }}.log.server" # Logging runs outside the docker network
KIBANA_SERVER_NAME: "agr.{{ env }}.kibana.server"

LOG_SERVER_ADDRESS: "udp://{{ LOG_SERVER_HOST }}:12201"

# Testing Vars
API_TESTING_SERVER_NAME: "build.alliancegenome.internal"
NEO_TESTING_SERVER_NAME: "build.alliancegenome.internal"
ES_TESTING_SERVER_NAME: "build.alliancegenome.internal"
CACHE_TESTING_SERVER_NAME: "build.alliancegenome.internal"

# Running Names
QC_RUN_NAME: "agr.{{ env }}.qc"
API_TEST_NAME: "agr.{{ env }}.api.test"
LOADER_RUN_NAME: "agr.{{ env }}.loader"
PREPROCESS_RUN_NAME: "agr.{{ env }}.preprocess"
CACHER_RUN_NAME: "agr.{{ env }}.cacher"
INDEXER_RUN_NAME: "agr.{{ env }}.indexer"
VARIANT_INDEXER_RUN_NAME: "agr.{{ env }}.variant_indexer"
INTERMINE_DATA_EXTRACTOR_RUN_NAME: "agr.{{ env }}.data_extractor"
INTERMINE_BUILDER_RUN_NAME: "agr.{{ env }}.intermine_builder"
LOADER_TEST_NAME: "agr.{{ env }}.loader.test"
INDEXER_TEST_NAME: "agr.{{ env }}.indexer.test"
FILE_GENER_RUN_NAME: "agr.{{ env }}.filegenerator"
FILE_GENER_TEST_RUN_NAME: "agr.{{ env }}.filegenerator.test"

# Server Env DockerHub Paths
LOG_IMAGE_NAME: "docker.elastic.co/logstash/logstash:7.7.0"
STATUS_NGINX_IMAGE_NAME: "nginx:latest"

# Registry Image names
GOCD_REG_INAME: "{{ REGISTRY }}/{{ GOCD_ENV_NAME }}"

ES_ENV_REG_INAME: "{{ REGISTRY }}/{{ ES_ENV_NAME }}"
QC_RUN_REG_INAME: "{{ REGISTRY }}/{{ QC_IMAGE_NAME }}"
KIBANA_REG_INAME: "{{ REGISTRY }}/{{ KIBANA_ENV_NAME }}"
NEO_ENV_REG_INAME: "{{ REGISTRY }}/{{ NEO_ENV_NAME }}"
LOADER_RUN_REG_INAME: "{{ REGISTRY }}/{{ LOADER_IMAGE_NAME }}"
NEO_DATA_REG_INAME: "{{ REGISTRY }}/{{ NEO_DATA_IMAGE_NAME }}"

VARIANT_RUN_REG_INAME: "{{ REGISTRY }}/agr_variant_indexer"
PREPROCESS_RUN_REG_INAME: "{{ REGISTRY }}/{{ PREPROCESS_IMAGE_NAME }}"
INFINISPAN_ENV_REG_INAME: "{{ REGISTRY }}/{{ INFINISPAN_ENV_NAME }}"
CACHER_DATA_REG_INAME: "{{ REGISTRY }}/{{ INFINISPAN_DATA_IMAGE_NAME }}"
FILE_GENER_RUN_REG_INAME: "{{ REGISTRY }}/{{ FILEGENER_IMAGE_NAME }}"
JAVA_SOFTWARE_RUN_REG_INAME: "{{ REGISTRY }}/{{ JAVA_SOFTWARE_IMAGE_NAME }}"
INTERMINE_BUILDER_RUN_REG_INAME: "{{ REGISTRY }}/{{ INTERMINE_BUILDER_ENV_NAME }}"

# Pull Images (complete names including registry and tag)
GOCD_IMAGE: "{{ GOCD_REG_INAME }}:latest"

ES_ENV_IMAGE: "{{ ES_ENV_REG_INAME }}:{{ DOCKER_PULL_TAG }}"
QC_RUN_IMAGE: "{{ QC_RUN_REG_INAME }}:{{ DOCKER_PULL_TAG }}"
KIBANA_IMAGE: "{{ KIBANA_REG_INAME }}:{{ DOCKER_PULL_TAG }}"
NEO_ENV_IMAGE: "{{ NEO_ENV_REG_INAME }}:{{ DOCKER_PULL_TAG }}"
LOADER_RUN_IMAGE: "{{ LOADER_RUN_REG_INAME }}:{{ DOCKER_PULL_TAG }}"
NEO_DATA_IMAGE: "{{ NEO_DATA_REG_INAME }}:{{ DOCKER_PULL_TAG }}"

VARIANT_RUN_IMAGE: "{{ VARIANT_RUN_REG_INAME }}:{{ DOCKER_PULL_TAG }}"
PREPROCESS_RUN_IMAGE: "{{ PREPROCESS_RUN_REG_INAME }}:{{ DOCKER_PULL_TAG }}"
INFINISPAN_ENV_IMAGE: "{{ INFINISPAN_ENV_REG_INAME }}:{{ DOCKER_PULL_TAG }}"
CACHER_DATA_IMAGE: "{{ CACHER_DATA_REG_INAME }}:{{ DOCKER_PULL_TAG }}"
FILE_GENER_RUN_IMAGE: "{{ FILE_GENER_RUN_REG_INAME }}:{{ DOCKER_PULL_TAG }}"
JAVA_SOFTWARE_RUN_IMAGE: "{{ JAVA_SOFTWARE_RUN_REG_INAME }}:{{ DOCKER_PULL_TAG }}"
INTERMINE_BUILDER_RUN_IMAGE: "{{ INTERMINE_BUILDER_RUN_REG_INAME }}:{{ DOCKER_PULL_TAG }}"

LOADER_TEST_RUN_IMAGE: "{{ LOADER_RUN_REG_INAME }}:{{ env }}_loader"
API_TEST_IMAGE: "{{ JAVA_SOFTWARE_RUN_REG_INAME }}:{{ env }}_api"
INDEXER_TEST_IMAGE: "{{ JAVA_SOFTWARE_RUN_REG_INAME }}:{{ env }}_indexer"
FILE_GENER_TEST_RUN_IMAGE: "{{ FILE_GENER_RUN_REG_INAME }}:{{ env }}_filegen"

#Server Images
UI_SERVER_IMAGE: "{{ REGISTRY }}/{{ UI_IMAGE_NAME }}:{{ DOCKER_PULL_TAG }}"
JBROWSE_SERVER_IMAGE: "{{ REGISTRY }}/{{ JBROWSE_IMAGE_NAME }}:{{ DOCKER_PULL_TAG }}"
APOLLO_SERVER_IMAGE: "{{ REGISTRY }}/{{ APOLLO_IMAGE_NAME }}:{{ DOCKER_PULL_TAG }}"

#Build and push images
NEO_DATA_BUILD_IMAGE: "{{ NEO_DATA_REG_INAME }}:{{ DOCKER_BUILD_TAG }}"
CACHER_DATA_BUILD_IMAGE: "{{ CACHER_DATA_REG_INAME }}:{{ DOCKER_BUILD_TAG }}"
INTERMINE_POSTGRES_SERVER_BUILD_IMAGE: "{{ REGISTRY }}/{{ INTERMINE_POSTGRES_SERVER_IMAGE_NAME }}:{{ DOCKER_BUILD_TAG }}"
INTERMINE_SOLR_SERVER_BUILD_IMAGE: "{{ REGISTRY }}/{{ INTERMINE_SOLR_SERVER_IMAGE_NAME }}:{{ DOCKER_BUILD_TAG }}"
INTERMINE_TOMCAT_SERVER_BUILD_IMAGE: "{{ REGISTRY }}/{{ INTERMINE_TOMCAT_SERVER_IMAGE_NAME }}:{{ DOCKER_BUILD_TAG }}"

# Convenience names
CACHER_RUN_IMAGE: "{{ JAVA_SOFTWARE_RUN_IMAGE }}"
INDEXER_RUN_IMAGE: "{{ JAVA_SOFTWARE_RUN_IMAGE }}"
VARIANT_INDEXER_RUN_IMAGE: "{{ VARIANT_RUN_IMAGE }}"

# Config Options
NEO_VOLUME_NAME: "/data"
INTERMINE_DATA_VOLUME_NAME: "/data"
INFINISPAN_MEMORY: "31g"
INDEXER_MEMORY: "31g"
NEO_PAGE_CACHE: "31g"
NEO_MAX_HEAP: "31g"
CACHER_MEMORY: "31g"
ES_CLUSTER_MEMORY: "20g"
#ES_CLUSTER_SERVER_LIST: "{{ ES_SERVER_NAME }}01,{{ ES_SERVER_NAME }}02,{{ ES_SERVER_NAME }}03,{{ ES_SERVER_NAME }}04,{{ ES_SERVER_NAME }}05,{{ ES_SERVER_NAME }}06,{{ ES_SERVER_NAME }}07,{{ ES_SERVER_NAME }}08,{{ ES_SERVER_NAME }}09,{{ ES_SERVER_NAME }}10,{{ ES_SERVER_NAME }}11,{{ ES_SERVER_NAME }}12,{{ ES_SERVER_NAME }}13,{{ ES_SERVER_NAME }}14,{{ ES_SERVER_NAME }}15,{{ ES_SERVER_NAME }}16"
ES_CLUSTER_SERVER_LIST: "{{ ES_SERVER_NAME }}01,{{ ES_SERVER_NAME }}02,{{ ES_SERVER_NAME }}03,{{ ES_SERVER_NAME }}04,{{ ES_SERVER_NAME }}05,{{ ES_SERVER_NAME }}06,{{ ES_SERVER_NAME }}07,{{ ES_SERVER_NAME }}08"
PROMETHEUS_CONFIG_PATH: "/home/core/config/prometheus"
GRAFANA_CONFIG_PATH: "/home/core/config/grafana"
ALERTMANAGER_CONFIG_PATH: "/home/core/config/alert_manager"
STATUS_NGINX_HTML_PATH: "/home/core/config/status_nginx"
