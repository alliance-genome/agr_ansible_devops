---

ansible_ssh_user: core
ansible_python_interpreter: /home/core/pypy/bin/pypy

ALLIANCE_RELEASE: "{{ lookup('env','ALLIANCE_RELEASE') }}"
REGISTRY: agrdocker

# Env Images
NEO_ENV_NAME: agr_neo4j_env
ES_ENV_NAME: agr_elasticsearch_env
KIBANA_ENV_NAME: agr_kibana_env
INFINISPAN_ENV_NAME: agr_infinispan_env

# Data Images
NEO_DATA_IMAGE_NAME: agr_neo4j_data_image
INFINISPAN_DATA_IMAGE_NAME: agr_infinispan_data_image

# Runable images
QC_IMAGE_NAME: agr_qc_run
LOADER_IMAGE_NAME: agr_loader_run
LOADER_TEST_IMAGE_NAME: agr_loader_test_run
PREPROCESS_IMAGE_NAME: agr_preprocess_run
JAVA_SOFTWARE_IMAGE_NAME: agr_java_software
FILEGENER_IMAGE_NAME: agr_file_generator_run
JBROWSE_IMAGE_NAME: agr_jbrowse_run
APOLLO_IMAGE_NAME: agr_apollo_run

# Server Images
UI_IMAGE_NAME: agr_ui_server

# Server Names
UI_SERVER_NAME: "agr.{{ env }}.ui.server"
JBROWSE_SERVER_NAME: "agr.{{ env }}.jbrowse.server"
APOLLO_SERVER_NAME: "agr.{{ env }}.apollo.server"
API_SERVER_NAME: "agr.{{ env }}.api.server"
NEO_SERVER_NAME: "agr.{{ env }}.neo4j.server"
INFINISPAN_SERVER_NAME: "agr.{{ env }}.infinispan.server"
LOGSTASH_SERVER_ADDRESS: "udp://logs.alliancegenome.internal:12201"
#LOGSTASH_SERVER_ADDRESS: "udp://agr.{{ env }}.log.server:12201"

#Elk Servers
ES_SERVER_NAME: "agr.{{ env }}.elasticsearch.server"
LOG_SERVER_NAME: "agr.{{ env }}.log.server" # Logging runs outside the docker network
KIBANA_SERVER_NAME: "agr.{{ env }}.kibana.server"

LOG_SERVER_ADDRESS: "udp://{{ LOG_SERVER_HOST }}:12201"

# Testing Vars
API_TESTING_SERVER_NAME: "build.alliancegenome.internal"
NEO_TESTING_SERVER_NAME: "build.alliancegenome.internal"
ES_TESTING_SERVER_NAME: "build.alliancegenome.internal"
CACHE_TESTING_SERVER_NAME: "build.alliancegenome.internal"

# Running Names
QC_RUN_NAME: "agr.{{ env }}.qc"
API_TEST_NAME: "agr.{{ env }}.api.test"
LOADER_RUN_NAME: "agr.{{ env }}.loader"
PREPROCESS_RUN_NAME: "agr.{{ env }}.preprocess"
CACHER_RUN_NAME: "agr.{{ env }}.cacher"
INDEXER_RUN_NAME: "agr.{{ env }}.indexer"
LOADER_TEST_NAME: "agr.{{ env }}.loader.test"
INDEXER_TEST_NAME: "agr.{{ env }}.indexer.test"
FILE_GENER_RUN_NAME: "agr.{{ env }}.filegenerator"
FILE_GENER_TEST_RUN_NAME: "agr.{{ env }}.filegenerator.test"

# Server Env DockerHub Paths
ES_ENV_IMAGE_NAME: "{{ REGISTRY }}/{{ ES_ENV_NAME }}"
LOG_IMAGE_NAME: "docker.elastic.co/logstash/logstash:7.7.0"
KIBANA_IMAGE_NAME: "{{ REGISTRY }}/{{ KIBANA_ENV_NAME }}"
NEO_ENV_IMAGE_NAME: "{{ REGISTRY }}/{{ NEO_ENV_NAME }}"
INFINISPAN_ENV_IMAGE_NAME: "{{ REGISTRY }}/{{ INFINISPAN_ENV_NAME }}"

# Release Image names
QC_RUN_IMAGE_NAME: "{{ REGISTRY }}/{{ QC_IMAGE_NAME }}:{{ ALLIANCE_RELEASE }}"
LOADER_RUN_IMAGE_NAME: "{{ REGISTRY }}/{{ LOADER_IMAGE_NAME }}:{{ ALLIANCE_RELEASE }}"
PREPROCESS_RUN_IMAGE_NAME: "{{ REGISTRY }}/{{ PREPROCESS_IMAGE_NAME }}:{{ ALLIANCE_RELEASE }}"
NEO_RELEASE_IMAGE_NAME: "{{ REGISTRY }}/{{ NEO_DATA_IMAGE_NAME }}:{{ ALLIANCE_RELEASE }}"
CACHER_RELEASE_IMAGE_NAME: "{{ REGISTRY }}/{{ INFINISPAN_DATA_IMAGE_NAME }}:{{ ALLIANCE_RELEASE }}"
FILE_GENER_RUN_IMAGE_NAME: "{{ REGISTRY }}/{{ FILEGENER_IMAGE_NAME }}:{{ ALLIANCE_RELEASE }}"
JAVA_SOFTWARE_RUN_IMAGE_NAME: "{{ REGISTRY }}/{{ JAVA_SOFTWARE_IMAGE_NAME }}:{{ ALLIANCE_RELEASE }}"

LOADER_TEST_RUN_IMAGE_NAME: "{{ REGISTRY }}/{{ LOADER_IMAGE_NAME }}:{{ env }}_loader"
API_TEST_IMAGE_NAME: "{{ REGISTRY }}/{{ JAVA_SOFTWARE_IMAGE_NAME }}:{{ env }}_api"
INDEXER_TEST_IMAGE_NAME: "{{ REGISTRY }}/{{ JAVA_SOFTWARE_IMAGE_NAME }}:{{ env }}_indexer"
FILE_GENER_TEST_RUN_IMAGE_NAME: "{{ REGISTRY }}/{{ FILEGENER_IMAGE_NAME }}:{{ env }}_filegen"

#Server Images
UI_SERVER_IMAGE_NAME: "{{ REGISTRY }}/{{ UI_IMAGE_NAME }}:{{ ALLIANCE_RELEASE }}"
JBROWSE_SERVER_IMAGE_NAME: "{{ REGISTRY }}/{{ JBROWSE_IMAGE_NAME }}:{{ ALLIANCE_RELEASE }}"
APOLLO_SERVER_IMAGE_NAME: "{{ REGISTRY }}/{{ APOLLO_IMAGE_NAME }}:{{ ALLIANCE_RELEASE }}"

# Convinience names
CACHER_RUN_IMAGE_NAME: "{{ JAVA_SOFTWARE_RUN_IMAGE_NAME }}"
INDEXER_RUN_IMAGE_NAME: "{{ JAVA_SOFTWARE_RUN_IMAGE_NAME }}"

# Network names for pulling by simple name
NEO_NETWORK_IMAGE_NAME: "{{ REGISTRY }}/{{ NEO_DATA_IMAGE_NAME }}:{{ NET }}"
CACHER_NETWORK_IMAGE_NAME: "{{ REGISTRY }}/{{ INFINISPAN_DATA_IMAGE_NAME }}:{{ NET }}"

# Config Options
NEO_VOLUME_NAME: agr_shared
INFINISPAN_MEMORY: "32g"
INDEXER_MEMORY: "32g"
NEO_PAGE_CACHE: "48g"
NEO_MAX_HEAP: "48g"
CACHER_MEMORY: "80g"
